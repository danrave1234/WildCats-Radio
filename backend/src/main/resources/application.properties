# Database Configuration
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# Connection pool settings - increased for cloud deployment
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
# Prevent JPA from failing on startup if DB is not available
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Timezone configuration to handle date/time correctly
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Manila
spring.jackson.time-zone=Asia/Manila

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# Email Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Make email optional to prevent app from crashing if email config is not set
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# Server Configuration
server.port=8080
server.address=0.0.0.0

# Enable serving static content
spring.web.resources.add-mappings=true

# Logging
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY}
logging.level.com.wildcastradio=${LOG_LEVEL_APP}
logging.level.org.hibernate.SQL=${LOG_LEVEL_HIBERNATE}

# Dynamic CORS Configuration - handled by CorsConfig.java
# Custom CORS origins can be set via environment variable: CORS_ALLOWED_ORIGINS=http://localhost:5173,https://your-domain.com
# No need to define the property here as it's read directly from environment variables

# WildCats Radio Configuration

# Spring Boot Application Domain (for WebSocket connections and API endpoints)
# This should be your deployed app domain
app.domain=${APP_DOMAIN}

# Icecast Server Configuration (using domain name)
# Note: FFmpeg connects directly to Icecast server port (8000), not through reverse proxy
icecast.host=${ICECAST_HOST}
icecast.port=${ICECAST_PORT}
icecast.source.username=${ICECAST_USERNAME}
icecast.source.password=${ICECAST_PASSWORD}
icecast.mount.point=${ICECAST_MOUNT}
icecast.admin.username=admin
icecast.admin.password=hackme

# WebSocket Configuration - enhanced for cloud deployment
# Configure maximum text message size (64KB)
spring.websocket.max-text-message-size=65536
# Configure maximum binary message size (4MB) for audio streaming - increased for cloud
spring.websocket.max-binary-message-size=4194304

# WebSocket Configuration for Audio Streaming - increased buffer sizes for cloud
spring.websocket.max-binary-message-buffer-size=262144
spring.websocket.max-text-message-buffer-size=131072
spring.websocket.max-session-idle-timeout=120000

# FFmpeg Streaming Configuration for Icecast - enhanced for cloud stability
ffmpeg.reconnect.enabled=true
ffmpeg.reconnect.delay.max=10
ffmpeg.rw.timeout=10000000
ffmpeg.retry.attempts=5

# Cloud Deployment Configuration
# Enable production optimizations when deployed
spring.profiles.active=${SPRING_PROFILES_ACTIVE}

# Network timeouts for cloud deployment - increased for cross-region connections
server.tomcat.connection-timeout=120000
server.tomcat.max-connections=400
server.tomcat.accept-count=200

# Enhanced logging for production debugging
logging.level.com.wildcastradio.icecast=${LOG_LEVEL_ICECAST}
logging.level.com.wildcastradio.config=${LOG_LEVEL_CONFIG}

# Connection pool optimizations for cloud deployment
spring.datasource.hikari.maximum-pool-size=${DATABASE_POOL_SIZE}
spring.datasource.hikari.minimum-idle=${DATABASE_MIN_IDLE}

# CORS configuration for cloud deployment
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
management.endpoints.web.cors.allowed-headers=*

# Additional CORS support for WebSocket upgrades
spring.websocket.sockjs.heartbeat-time=25000
spring.websocket.sockjs.disconnect-delay=5000
spring.websocket.sockjs.client-library-url=https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js

# Http client timeout settings for external API calls
spring.cloud.openfeign.client.config.default.connect-timeout=30000
spring.cloud.openfeign.client.config.default.read-timeout=60000
